# [gcode_macro UNLOAD_FILAMENT]
# gcode:
#     SAVE_GCODE_STATE NAME=UNLOADFILAMENT
#     M83                                   ; set extruder to relative
#     G1 E2 F300                            ; (CAUSING CLOGS AT 10mm?) extrude a little to soften tip 
#     G1 E-50 F1800                         ; retract filament completely
#     G1 E-50 F1800                         ; retract filament completely
#     RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro G32]
gcode:
  BED_MESH_CLEAR
  G28
  QUAD_GANTRY_LEVEL
  BED_MESH_PROFILE LOAD=default
  G28


[gcode_macro LIGHTS_ON]
gcode:
  SET_LED led=front_display TRANSMIT=1 RED=1 GREEN=1 BLUE=1
  SET_LED LED=enclosure_one TRANSMIT=1 RED=1 GREEN=1 BLUE=1
  SET_LED LED=enclosure_two TRANSMIT=1 RED=1 GREEN=1 BLUE=1


[gcode_macro LIGHTS_OFF]
gcode:
  SET_LED led=front_display TRANSMIT=1 RED=0.5 GREEN=0 BLUE=0
  SET_LED LED=enclosure_one TRANSMIT=1 RED=0 GREEN=0 BLUE=0
  SET_LED LED=enclosure_two TRANSMIT=1 RED=0 GREEN=0 BLUE=0


[gcode_macro REBOOTFW]
gcode:
  FIRMWARE_RESTART


[gcode_macro PURGE_LINE]
gcode:
  G92 E0                           ; reset Extruder
  G1 X5.1 Y50 Z0.28 F5000.0        ; move to start position
  G1 X5.1 Y250.0 Z0.28 F1500.0 E15 ; draw the first line
  G1 X5.4 Y250.0 Z0.28 F5000.0     ; move to side a little
  G1 X5.4 Y50 Z0.28 F1500.0 E30    ; draw the second line
  G92 E0                           ; reset Extruder
  G1 Z2.0 F3000                    ; move Z Axis


[gcode_macro PRINT_START]
gcode:
  {% set BED = params.BED|default(115)|float %}
  {% set EXTRUDER = params.EXTRUDER|default(245)|float %}
  {% set SOAK = params.SOAK|default(0)|float %}

  SET_LED LED=enclosure_one TRANSMIT=1 RED=1.0 GREEN=0.0 BLUE=0.0
  SET_LED LED=enclosure_two TRANSMIT=1 RED=1.0 GREEN=0.0 BLUE=0.0

  ; if the bed is already at the correct target temp, we assume no heat soak is necessary
  {% if (SOAK|int) <= 0 or (printer.heater_bed.temperature >= (BED|int - 20)) %}
  {% else %}
    M117 Heating for soak
    M190 S{BED} ; wait for bed temp
    M117 Starting soak
    SET_LED led=front_display TRANSMIT=1 RED=1 GREEN=0.4 BLUE=0
    {% for timer in range(SOAK|int,0,-1) %}
      M117 Soak: {timer|int}m remaining
      M105 ; temperature report
      G4 P60000 ; pause for 60s
    {% endfor %}
    M117 Soak complete
  {% endif %}

  M190 S{BED}           ; wait for bed temp
  G32                   ; home all axes, GQL, bed mesh, etc.
  G1 X5 Y50 Z20 F5000.0 ; move nozzle away from bed (may not even be used, if hotend gets up to temp fast enough)
  M109 S{EXTRUDER}      ; set and wait for hotend temp
  G1 E-3.0 F3600        ; retract some filament to reduce oozing
  ; CLEAN_HEAD

  PURGE_LINE
  M83 ; relative position

  M117 Starting print
  SET_LED led=front_display TRANSMIT=1 RED=1 GREEN=1 BLUE=1
  SET_LED LED=enclosure_one TRANSMIT=1 RED=1 GREEN=1 BLUE=1
  SET_LED LED=enclosure_two TRANSMIT=1 RED=1 GREEN=1 BLUE=1

  # SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
  # TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=1 FACTOR=.005


[gcode_macro PRINT_END]
gcode:
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-5.0 F3600                 ; retract filament
  G91                            ; relative positioning
  G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
  TURN_OFF_HEATERS
  M107                           ; turn off fan
  G1 Z5 F3000                    ; move nozzle up 2mm
  G90                            ; absolute positioning
  G0  X125 Y250 F3600            ; park nozzle at rear
  BED_MESH_CLEAR

  RUN_SHELL_COMMAND CMD=notification_finished
  M117 Print finished
  SET_LED led=front_display TRANSMIT=1 RED=0 GREEN=0.5 BLUE=0
  SET_LED LED=enclosure_one TRANSMIT=1 RED=0 GREEN=1 BLUE=0
  SET_LED LED=enclosure_two TRANSMIT=1 RED=0 GREEN=1 BLUE=0


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

  M117 Cancelled
  RUN_SHELL_COMMAND CMD=notification_cancelled
  SET_LED led=front_display TRANSMIT=1 RED=1 GREEN=0 BLUE=0.4
  SET_LED LED=enclosure_one TRANSMIT=1 RED=1 GREEN=0 BLUE=0
  SET_LED LED=enclosure_two TRANSMIT=1 RED=1 GREEN=0 BLUE=0


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}